group = 'org.testeditor.web'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.xtext:xtext-gradle-plugin:2.0.6'
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}

apply plugin: 'java-library'
apply plugin: 'org.xtext.xtend'
apply plugin: 'net.researchgate.release'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

apply from: "$rootDir/gradle/publishing.gradle"

apply from: 'code-style/codestyle.gradle'

sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    jcenter()
    maven {
        url  "http://dl.bintray.com/test-editor/maven"
    }
	maven {
		url  "http://dl.bintray.com/franzbecker/maven"
	}
}

ext.versions = [
    dropwizard: '1.3.7',
    xtext: '2.15.0',
    testEditorLanguage: '2.3.4',
	testEditorDropwizard: '0.19.+'
]

sourceSets {
    main.xtendOutputDir = 'src/main/xtend-gen'
    test.xtendOutputDir = 'src/test/xtend-gen'
}

dependencies {
    implementation "org.eclipse.xtend:org.eclipse.xtend.lib:$versions.xtext"
    implementation "org.testeditor.web:org.testeditor.web.dropwizard:$versions.testEditorDropwizard"
    //implementation "io.dropwizard:dropwizard-core:$versions.dropwizard"
    compile "commons-io:commons-io:2.6"
    compile "org.apache.commons:commons-text:1.4"

//    implementation "org.apache.commons:commons-lang3:3.4"
//    implementation "org.gradle:gradle-tooling-api:2.14.1"
//    implementation "org.eclipse.xtend:org.eclipse.xtend.core:$versions.xtext"

    testImplementation "junit:junit:4.12"
    testImplementation "io.dropwizard:dropwizard-testing:$versions.dropwizard"
    testImplementation "org.assertj:assertj-core:3.8.0"
    testImplementation "org.mockito:mockito-core:2.11.0"
    testImplementation "org.eclipse.xtext:org.eclipse.xtext.testing:$versions.xtext"
	testImplementation "org.testeditor.web:org.testeditor.web.dropwizard.testing:$versions.testEditorDropwizard"
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

/*
 * Configure release plugin.
 * Remove tasks "updateVersion" and "commitNewVersion" as we don't want the new SNAPSHOT
 * version commit on the master branch.
 */
tasks.release.tasks -= [":updateVersion", ":commitNewVersion"]
release {
    preTagCommitMessage = '[release]'
    tagCommitMessage = '[release]'
    newVersionCommitMessage = '[release] new version'
    tagTemplate = 'v${version}'
}

afterReleaseBuild.dependsOn bintrayUpload
